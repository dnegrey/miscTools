% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bin.R
\name{bin}
\alias{bin}
\title{Bin a variable}
\usage{
bin(x, ...)

## S3 method for class 'numeric'
bin(x, numBins = 10, equalBinSize = FALSE, 
    minPct = 0, maxPct=100)
}
\arguments{
\item{x}{character, factor, logical or numeric vector}

\item{numBins}{integer value >= 2; number of desired bins}

\item{equalBinSize}{logical value; return equally sized (\code{TRUE}) or 
equally spaced (\code{FALSE}) bins}

\item{minPct}{integer between 0 and 100 specifying a percentile to force as 
the max endpoint for the low (first) bin}

\item{maxPct}{integer between 0 and 100 specifying a percentile to force as 
the min endpoint for the high (last) bin (must be > \code{minPct})}
}
\value{
A character vector containing binned values of \code{x}.
}
\description{
\code{bin()} takes a vector \code{x} and returns a character 
vector of the same length, containing a binned version of \code{x}. 
Character, factor and logical vectors are coerced to character, while 
numeric vectors are binned according to parameter specification. This includes 
the number of desired bins, equally spaced vs. equally sized bins and the 
percentiles to force as the max/min endpoints of the low/high bins. 
\code{NA} values in \code{x} are returned as \code{NA} character values.
}
\examples{
# character, factor, logical
bin(letters)
bin(iris$Species)
bin(c(TRUE, FALSE, TRUE))
# numeric
x <- round(rnorm(50, 100, 5))
print(x)
bin(x)
y <- factor(bin(x))
z <- as.numeric(substr(levels(y), 2, regexpr(",", levels(y)) - 1))
y <- factor(bin(x), levels = levels(y)[order(z)])
summary(y)
}
\seealso{
\code{\link{cut}, \link{cut_number}, \link{quantile}}
}
