% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clusterDT.R
\name{clusterDT}
\alias{clusterDT}
\title{Produce a variable cluster datatable}
\usage{
clusterDT(x, columnFilters = FALSE, highlightVars = NA_character_,
  highlightColor = "yellow", varNameTransform = function(x) {     x })
}
\arguments{
\item{x}{\code{mt_variable_cluster} or \code{mt_variable_cluster_plus} object}

\item{columnFilters}{logical value; include column filters?}

\item{highlightVars}{character vector; \code{x$VarName} values used to highlight rows}

\item{highlightColor}{character string; highlight color (valid color)}

\item{varNameTransform}{function used to transform \code{x$VarName}; should 
take only one parameter and return a character vector of the same length. 
Example (bold effect): \code{varNameTransform = function(x){paste0("<b>", x, "</b>")}}}
}
\value{
A \code{datatable} representation of a \code{mt_variable_cluster} or 
\code{mt_variable_cluster_plus} object.
}
\description{
\code{clusterDT} produces a nicely formatted \code{DT::datatable} 
representation of a \code{mt_variable_cluster} or \code{mt_variable_cluster_plus} 
object.
}
\examples{
# regular variable cluster
x <- variable_cluster(mtcars, 3)
clusterDT(x)

# variable cluster plus info value
x <- variable_cluster(mtcars[names(mtcars) != "vs"], 3)
y <- lapply(mtcars[names(mtcars) != "vs"], woe, y = mtcars$vs)
y <- lapply(y, infoValue)
z <- variable_cluster_plus(x, y)
clusterDT(z)

# variable cluster plus R-squared
x <- variable_cluster(mtcars[names(mtcars) != "mpg"], 3)
y <- lapply(mtcars[names(mtcars) != "mpg"], nrsq, y = mtcars$mpg)
z <- variable_cluster_plus(x, y)
clusterDT(z)
}
\seealso{
\code{\link{variable_cluster}, \link{variable_cluster_plus}, \link{datatable}}
}
