% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/variable_cluster.R
\name{variable_cluster}
\alias{variable_cluster}
\title{Cluster a set of numeric variables}
\usage{
variable_cluster(x, n, na.rm = TRUE)
}
\arguments{
\item{x}{data frame; contains the variables to be clustered}

\item{n}{integer value >= 2; number of desired clusters}

\item{na.rm}{logical value; should records with missing values be removed?}
}
\value{
A data frame with class "\code{mt_variable_cluster}" containing the 
following columns:
\itemize{
  \item \code{VarName}: variable name (character)
  \item \code{PrimaryCluster}: assigned cluster (integer)
  \item \code{RsquaredToPrimaryCluster}: R-squared to primary cluster (numeric)
  \item \code{NearestCluster}: next nearest cluster (integer)
  \item \code{RsquaredToNearestCluster}: R-squared to nearest cluster (numeric)
  \item \code{OneMinusRsquaredRatio}: one minus R-squared ratio (numeric)
}
}
\description{
\code{variable_cluster()} performs non-hierarchical (disjoint) 
variable clustering on the numeric variables in a specified data frame. This 
approach is similar to that of the \code{varclus} procedure in SAS. Like 
that approach, the default behavior is to remove records with any missing 
values (\code{na.rm = TRUE}). Unlike that approach, however, missing values 
can be easily replaced with their column means (\code{na.rm = FALSE}). Note 
that this can greatly increase the size of the data to be clustered, which 
will increase the run time of the function. An example of this was timed on a 
data frame with about 230K observations and 200 variables where the function 
took 10 minutes. Future efforts should be made to optimize this or explore 
alternative approaches.
}
\examples{
variable_cluster(mtcars, 3)
}
\seealso{
\code{\link{kmeansvar}}
}
